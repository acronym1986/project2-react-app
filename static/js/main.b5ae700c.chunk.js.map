{"version":3,"sources":["pages/AddSearch.js","pages/Vaccines.js","pages/About.js","components/Nav.js","pages/Cases.js","pages/Login.js","pages/Definition.js","App.js","reportWebVitals.js","index.js"],"names":["AddSearch","useState","input","setInput","confirmed","setConfirmed","todos","setTodos","useEffect","fetch","then","response","json","data","All","console","log","catch","error","v","toggleTodo","todoId","updatedTodos","map","todo","id","completed","className","onSubmit","event","preventDefault","length","text","htmlFor","type","placeholder","value","name","onChange","target","undefined","onClick","filter","removeTodo","Vaccines","population","setPopulation","administered","setAdministered","people_vaccinated","setPeople_vaccinated","people_partially_vaccinated","setPeople_partially_vaccinated","updated","setUpdated","pie","labels","datasets","label","backgroundColor","hoverOffset","style","lineHeight","fontWeight","width","height","options","maintainAspectRatio","About","Component","Nav","to","Cases","todayConfirmed","setTodayConfirmed","recovered","setRecovered","active","setActive","deaths","setDeaths","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","setMap","mapCountries","setMapCountries","mapZoom2","setMapZoom2","cases","todayCases","countryInfo","long","a","getCountriesData","setView","fontSize","MapContainer","center","zoom","whenCreated","TileLayer","url","attribution","elem","Circle","color","fillColor","fillOpacity","radius","Math","sqrt","Login","userName","setUserName","passWord","setPassWord","method","headers","body","JSON","stringify","username","password","users","Definition","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5ae700c.chunk.js","sourcesContent":["//import React from 'react';\nimport React, {useState, useEffect  } from 'react';\n\n   function AddSearch( ) {\n     //const { name } = useParams();\n         //user.username,  user.password\n     const [input, setInput] = useState('');\n     const [confirmed, setConfirmed] = useState('');\n     //const [recovered, setRecovered] = useState('');\n    // const [deaths, setDeaths] = useState('');\n\n     //const [todo, setTodo] = useState(\"\");\n     const [todos, setTodos] = useState([]);\n     \n      \n      useEffect(() => {\n       \n         fetch('https://covid-api.mmediagroup.fr/v1/cases?country=' + input)\n          \n         .then (response => response.json())\n         .then (data => {\n             \n            setConfirmed(  data.All.confirmed );\n            // setRecovered(  data.All.recovered );\n            // setDeaths(  data.All.deaths );\n             console.log( data);\n              \n          } )\n         .catch(error => {\n             console.log(error);    \n         })\n         },[input]);\n         \n         let v = confirmed;\n         const handleChange = event => {\n            setInput(event.target.value);\n          };\n           \n         const addTodo = () => {\n            setTodos([...todos,\n              {\n                id: todos.length + 1,\n                text: input,\n                completed: false\n              }\n            ]);\n          };\n\n         const onSubmit = event => {\n            event.preventDefault();\n            if (input === \"\") return;\n            addTodo();\n            setInput(\"\");\n          };\n\n\n         const removeTodo = todoId => {\n            const updatedTodos = todos.filter(input => input.id !== todoId);\n            setTodos(updatedTodos);\n          };\n        \n        \n         const toggleTodo = todoId => {\n            const updatedTodos = todos.map(todo => {\n              return input.id === todoId\n                ? { ...input, completed: !input.completed }\n                : input;\n            });\n            setTodos(updatedTodos);\n          };\n\n     return (\n          \n        <div className=\"container\">\n         <form onSubmit={onSubmit}>\n            <label htmlFor=\"input\">Collect Item</label>\n             <br />\n             <input\n             type = 'text'\n             placeholder = 'Type something'\n             value = {input}\n             name = 'text'\n             className = 'search-input'\n             onChange = {handleChange}\n             />\n             <button className = \"searchBar-button\" >Add Item</button> \n         </form>\n         <div>\n            <ul>\n             {todos.map(input => (\n            <li key={input.id}>\n              <span\n                className={input.completed ? \"item-unwanted\" : undefined}\n                onClick={() => toggleTodo(input.id)}\n              >\n                {input.text}{' : '}{v}{' '}\n                \n              </span>\n              <span className=\"delete-btn\" onClick={() => removeTodo(input.id)}>\n              {' '}✕\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n\n\n\n         </div >\n     )\n   }\n\n\n\nexport default AddSearch;","//import React from 'react';\nimport React, {useState, useEffect  } from 'react';\nimport { Pie } from \"react-chartjs-2\";\n\n\n   function Vaccines() {\n     //const { name } = useParams();\n    \n     const [input, setInput] = useState('');\n     const [population, setPopulation] = useState('');\n     const [administered,setAdministered] = useState('');\n     const [people_vaccinated, setPeople_vaccinated] = useState('');\n     const [people_partially_vaccinated, setPeople_partially_vaccinated] = useState('');\n     const [updated, setUpdated] = useState('');\n     \n     \n     useEffect(() => {\n       \n         fetch('https://covid-api.mmediagroup.fr/v1/vaccines?country=' + input)\n          \n         .then (response => response.json())\n         .then (response => {\n             \n            setPopulation( response.All.population );\n            setAdministered(response.All.administered );\n            setPeople_vaccinated(response.All.people_vaccinated);\n            setPeople_partially_vaccinated( response.All.people_partially_vaccinated );\n            setUpdated( response.All.updated);\n              console.log( response);\n              \n          } )\n         .catch(error => {\n             console.log(error);\n              \n         })\n         },[input]);\n\n         const handleChange = event => {\n            setInput(event.target.value);\n          };\n          \n     \n         const pie = {\n            labels: [\n               'population',\n               'administered',\n               'people vaccinated',\n               'people partially vaccinated'\n            ],\n            datasets: [{\n              label: 'status of vaccines Administration ',\n              data: [\n                population, \n                administered,\n                people_vaccinated, \n                people_partially_vaccinated\n                    ],\n              backgroundColor: [\n                'rgb(36, 135, 168)',\n                'rgb(226, 115, 0)',\n                'rgb(76, 175, 80)',\n                'rgb(255, 204, 0)'\n              ],\n              hoverOffset: 4\n            }]\n          };\n       \n     return (\n          \n         <form className = 'searchBar'>\n             <input\n             type = 'text'\n             placeholder = 'Type something'\n             value = {input}\n             name = 'text'\n             className = 'search-input'\n             onChange = {handleChange}\n             />\n             <button className = \"searchBar-button\" >Search</button> \n              \n             <br/>\n              <div className = 'display-result'>\n                  <div className = 'general'>\n\n                     <div className = 'card'>\n                        <label>Population</label>\n                        <h3>{population}</h3>\n                     </div>\n\n                     <div className = 'card'>\n                        <label>partially vaccinated</label>\n                        <h2>{people_partially_vaccinated}</h2>\n                     </div>\n\n                      <div className = 'card'>\n                         <label>Updated</label>\n                         <p style = { {lineHeight:'20px', fontWeight: 'bold'}}>{updated}</p>\n                      </div>\n                 </div>\n              </div> \n               \n               <div>\n               <Pie data= {pie} width={300} height={400} \n               options={{ maintainAspectRatio: false }}/>\n               </div>\n              \n         </form>\n         \n     )\n   }\n\n\n\nexport default Vaccines;","import React, {Component, Fragment} from 'react'\n\nclass About extends Component {\n    \n    render () {\n        return (\n            <>\n                <h1>About Page</h1>\n                <p>This App is developed to check current Covid-19 situation</p>\n            </>\n        )\n    }\n}\n\nexport default About;","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Nav extends Component {\n    render() {\n        return (\n            <div>\n                 \n                 <Link to = '/AddSearch'>AddSearch</Link>\n                 <Link to = '/About'>About</Link>\n                 <Link to = '/Vaccines'>Vaccines</Link>\n                 <Link to = '/Cases'> Cases</Link>\n                 <Link to = '/Login'> Login</Link>\n                 <Link to = '/Definition'> Definition</Link>\n            </div>\n        )\n    }\n}\n\nexport default Nav;","//import React from 'react';\nimport React, {useState, useEffect  } from 'react';\nimport {MapContainer, TileLayer, Circle  } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Cases.css\"\n\n\n\n   function Cases() {\n     //const { name } = useParams();\n    \n     const [input, setInput] = useState('');\n     const [confirmed, setConfirmed] = useState('');\n     const [todayConfirmed, setTodayConfirmed] = useState('');\n     const [recovered, setRecovered] = useState('');\n     const [active, setActive] = useState('');\n     const [deaths, setDeaths] = useState('');\n\n     const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n     const [mapZoom, setMapZoom] = useState(3);\n\n     const [map,setMap] = useState(null);\n     \n     const [mapCountries,setMapCountries] = useState([]);\n     const [mapZoom2, setMapZoom2] = useState(3);\n     \n     \n     const handleChange = event => {\n        setInput(event.target.value);\n      };\n      \n     useEffect(() => {\n       \n         fetch ('https://corona.lmao.ninja/v3/covid-19/countries/' + input)\n          \n         .then (response => response.json())\n         .then (data => {\n             \n             setConfirmed(  data.cases );\n             setTodayConfirmed(data.todayCases);\n             setRecovered(  data.recovered);\n             setDeaths(  data.deaths );\n             setActive(data.active);\n             setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n             setMapZoom(4);\n            // console.log( data);\n              \n          } )\n         .catch(error => {\n             console.log(error);\n              \n         })\n         },[input]);\n\n\n         useEffect(() => {\n            const getCountriesData = async() => {\n               await  fetch(\"https://disease.sh/v3/covid-19/countries\")\n              .then((response) => response.json())\n              .then((data) => {\n                setMapCountries(data);\n                setMapZoom2(4)\n                console.log(data);\n             });\n         }; // getCountriesData() End\n     \n         getCountriesData(); //calling getCountriesData async func\n       }, []);\n        \n         \n         \n     if (map) {\n         map.setView(mapCenter);\n        }\n     return (\n          \n         <form className = 'searchBar'>\n             <input\n             type = 'text'\n             placeholder = 'Type something'\n             value = {input}\n             name = 'text'\n             className = 'search-input'\n             onChange = {handleChange}\n             />\n             <button className = \"searchBar-button\" >Search</button> \n              \n             <br/>\n               \n              <div className = 'display-result'>\n                  <div className = 'general'>\n\n                     <div className = 'card'>\n                        <label>Confirmed</label>\n                        <h2>{confirmed}</h2>\n                        <p style={{fontSize: '12px'}}>today confirm:</p>\n                        <p style={{fontSize: '12px'}}>{todayConfirmed}</p>\n                     </div>\n\n                     <div className = 'card'>\n                        <label>Recovered:</label>\n                        <h2>{recovered}</h2>\n                        <p style={{fontSize: '12px'}}>active:</p>\n                        <p style={{fontSize: '12px'}}>{active}</p>\n                     </div>\n\n                      <div className = 'card'>\n                         <label>Deaths:</label>\n                         <h2>{deaths}</h2>\n                      </div>\n                           \n                 </div>\n              </div> \n            <div className=\"map\">\n              <MapContainer center = {mapCenter} zoom = {mapZoom} whenCreated={setMap}>\n               \n              <TileLayer\n               url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n               attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              />{ mapCountries.map((elem) => {  \n                  return(\n                   <Circle\n                      center={[elem.countryInfo.lat, elem.countryInfo.long]}  \n                      zoom = {mapZoom2} \n                      color='#CC1034'\n                      fillColor= '#CC1034'\n                      fillOpacity={0.4}\n                      radius={Math.sqrt(elem.cases) * 300}\n                   ></Circle>\n                   )})}\n             </MapContainer>\n          </div>\n\n         </form>\n     )\n   }\n\nexport default Cases;","//import React, {Component} from 'react'\nimport React,  {useState,useEffect} from 'react'\n \n  \n \n\nfunction Login() {\n   // const [idd,setId] = useState('')\n    const [userName, setUserName] = useState('')\n    const [passWord, setPassWord] = useState('')\n\n    \n   const fetchData = () =>{ \n      return fetch('http://localhost:3000/users', {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n         },\n         body: JSON.stringify({ \n            username: userName,\n            password: passWord\n         })\n      })\n     .then(response => response.json())\n     .then(data => {\n        setUserName(data.users.username)\n        setPassWord(data.users.password)\n        console.log(data)\n      })\n     .catch(error => {console.log(error)})\n   }\n\n    \n   useEffect(fetchData,[])\n  \n \n    \nconst handleChangeUserName = event => {\n    setUserName(event.target.value);\n    \n  };\n    \n  const handleChangePassWord = event => {\n    setPassWord(event.target.value);\n  };\n  //const onSubmit = (event => {event.preventDefault(); a }) ;\n     \n return (\n            \n                <div>\n                <div className=\"loginContainer\">\n                <h2>Login</h2>\n                    <form>\n                            <input\n                            name=\"username\"\n                            placeholder=\"User Name\"\n                            value={userName}\n                            onChange={handleChangeUserName }\n                            className=\"form-control\"\n                            />  <br />\n\n                            <input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={passWord}\n                            onChange={handleChangePassWord }\n                            className=\"form-control\"\n                            />  <br />\n\n                        <button  className=\"btn btn-primary\">Submit</button>\n\n                        <div className = 'username'>\n                         <label>User Name</label>\n                         <p>{userName}</p>\n                      </div>\n                          \n                      <div className = 'password'>\n                         <label>Password</label>\n                         <p>{passWord}</p>\n                      </div>\n                        </form>\n                    </div>\n            </div>\n                \n            \n        )\n    \n}\n\nexport default Login;"," \n\nfunction Definition () {\n    return (\n          <div>\n          <h3>Covid-19 explained</h3>\n         <p>COVID-19 is a disease caused by a new strain of coronavirus. ‘CO’ stands for corona, ‘VI’ for virus, and \n‘D’ for disease. Formerly, this disease was referred to as ‘2019 novel coronavirus’ or ‘2019-nCoV.’\nThe COVID-19 virus is a new virus linked to the same family of viruses as Severe Acute Respiratory \nSyndrome (SARS) and some types of common cold.</p>\n         </div>\n    )\n}\n\nexport default Definition;","//import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport AddSearch from './pages/AddSearch';\nimport Vaccines from './pages/Vaccines';\nimport About from './pages/About';\nimport Nav from './components/Nav';\nimport Cases from './pages/Cases';\nimport Login from './pages/Login';\nimport Definition from './pages/Definition';\n\n \n\n\n//<AddSearch user = {user} /> </Route> \nfunction App() {\n\n  const user = {username : \"tim\", password : \"123\"}\n  \n  return (\n    <div className=\"App\">\n\n       <Router>\n          <h1>Search Covid Cases</h1>\n          \n          <Nav/> \n          <Route  exact path = '/AddSearch' component = {AddSearch} />  \n              \n          <Route  exact path = '/About' component = {About}/>\n          <Route  exact path = '/Vaccines' component = {Vaccines}/>\n          <Route  exact path = '/Cases' component = {Cases}/>\n          <Route  exact path = '/Login' component = {Login}/>\n          <Route  exact path = '/Definition' component = {Definition}/>\n       </Router>\n          \n       \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}